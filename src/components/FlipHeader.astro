---
interface Props {
  first?: string;
  second?: string;
  toggleTheme?: boolean;
}
const {
  first = "Alex Reddicks",
  second = "augmented.alex",
  toggleTheme,
} = Astro.props;
---

<flip-header
  data-first={first}
  data-second={second}
  data-toggleTheme={toggleTheme}
>
  <h1 class="interactive-header text-gradient-accent interactive fluid animated-text-gradient"></h1>
</flip-header>

<style lang="scss">
  .interactive-header {
    cursor: pointer;
    text-align: center;
    user-select: none;
    transition: all 0.2s;
    text-wrap: balance;
    margin: auto;
    min-height: 100px;
    --font-level: 5;
  }
  .flipping {
    opacity: 0;
    transform: translateY(-10px);
  }
  h1 {
    text-align: center;
  }
</style>

<script>
  import { getTheme, setTheme, Theme } from '../services/theme.service';
  class FlipHeader extends HTMLElement {
    constructor() {
      super();
      const header = this.querySelector("h1")!;
      let isFlipped = false;
      
      header.addEventListener("click", () => {
        isFlipped = !isFlipped;
        setTheme(this.isDark() ? Theme.Light : Theme.Dark);
        header.classList.add("flipping");
        void header.offsetWidth;
        setTimeout(() => {
          header.textContent = this.isDark()
            ? (this.dataset.second as string)
            : (this.dataset.first as string);
          header.classList.remove("flipping");
        }, 200);
      });
      setTheme(getTheme());
      header.textContent = this.isDark()
        ? (this.dataset.second as string)
        : (this.dataset.first as string);
    }

    isDark() {
      return document.documentElement.classList.contains("theme-dark");
    }
  }

  console.log(getTheme().toString());

  customElements.define("flip-header", FlipHeader);
</script>
<script is:inline>
  function applyTheme() {
    localStorage.theme === "dark"
      ? document.documentElement.classList.add("theme-dark")
      : document.documentElement.classList.remove("theme-dark");
  }
  document.addEventListener("astro:after-swap", applyTheme);
  applyTheme();
</script>
<script src="../utilities/magnetism.ts"></script>