---
import LinkIconButton from "../components/LinkIconButton.astro";

interface Props {
  title: string;
  description: string;
  tags: string[];
  view?: string;
  details?: string;
  code?: string;
  index?: number;
}

const { title, description, tags, view, details, code, index } = Astro.props;
---
<div class="fade-in-animation" style={{animationDelay: (index ?? 1) / 25 + "s"}}>
  <div class="work-item">
    <a class="interactive" href={details}><h3 class="title">{title}</h3></a>
    <p class="description">{description}</p>
    <div class="footer">
      <div class="tags">
        {tags?.map((tag) => <span class="tag flex-center">{tag}</span>)}
      </div>
      <div class="actions">
        {
          view ? (
            <LinkIconButton
              small
              reveal
              above
              label="view"
              icon="mdi:eye"
              link={view}
              external
            />
          ) : (
            <span />
          )
        }
        <LinkIconButton
          small
          reveal
          above
          label="details"
          icon="mdi:text-box"
          link={details}
        />
        {
          code ? (
            <LinkIconButton
              small
              reveal
              above
              label="code"
              icon="mdi:code"
              link={code}
              external
            />
          ) : (
            <span />
          )
        }
      </div>
    </div>
  </div>
</div>

<style lang="scss">
  @-webkit-keyframes FadeIn { 
  0% {
    opacity: 0.5;
    -webkit-transform: scale(.75);
  }
  100% {
    opacity: 1;
    -webkit-transform: scale(1);
  }
}
  @keyframes FadeIn { 
  0% {
    opacity: 0.5;
    transform: scale(.75);
  }
  100% {
    opacity: 1;
    transform: scale(1);
  }
}
  .fade-in-animation {
    animation: FadeIn 0.25s cubic-bezier(0.2, 0, 0, 1) both;
  }

  .work-item {
    background-color: rgba(var(--gray-999-rgb), 0.66);
    border: 2px solid var(--gray-800);
    padding: 0.5rem 0.5rem 0.5rem 1rem;
    margin: 1rem 0.5rem;
    -webkit-transition: all 0.3s cubic-bezier(0.2, 0, 0, 1);
    transition: all 0.3s cubic-bezier(0.2, 0, 0, 1);
    &:hover {
      border: 2px solid var(--gray-700);
      background-color: var(--gray-800);
      transform: translate3d(0, -3px, 3px);
    }
    a {
      display: inline-block;
      text-decoration: none;
      &:hover,
      &:focus-visible {
        text-decoration: underline;
      }
    }
    .title {
      font-size: var(--text-2xl);
    }
    .description {
      margin-top: 0.5rem;
    }
    .footer {
      display: flex;
      align-items: flex-end;
      width: 100%;
      .tags {
        height: fit-content;
        display: flex;
        flex: 1;
        align-items: flex-end;
        gap: 0.5rem;
        overflow-x: auto;
        padding: 0 0.3rem;
        margin-left: -0.3rem;
        -webkit-mask: linear-gradient(90deg, #0000, #000 1% 98%, #0000);
        &::-webkit-scrollbar {
          height: 2px;
        }
        &::-webkit-scrollbar-track {
          background: transparent;
        }
        &::-webkit-scrollbar-thumb {
          background: var(--gray-600);
        }
        &::-webkit-scrollbar-thumb:hover {
          background: var(--gray-500);
        }
        .tag {
          border: 2px solid var(--gray-700);
          border-radius: 35px;
          padding: 0 0.75rem;
          white-space: nowrap;
          &:hover,
          &:focus-visible {
            cursor: default;
            border: 2px solid var(--gray-600);
          }
        }
      }
      .actions {
        display: flex;
        margin-bottom: -0.5rem;
      }
    }
  }
</style>
<script src="../utilities/magnetism.ts"></script>
